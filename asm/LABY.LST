Microsoft (R) Macro Assembler Version 5.00                  1/11/22 11:16:06
                                                             Page     1-1


       1				; Program gwiazdki.asm 
       2				; Wyœwietlanie znaków * w takt przerwañ
					 zegarowych 
       3				; Uruchomienie w trybie rzeczywistym pr
					ocesora x86 
       4				; lub na maszynie wirtualnej 
       5				; zakoñczenie programu po naciœniêciu k
					lawisza 'x' 
       6				; asemblacja (MASM 4.0): masm gwiazdki.
					asm,,,; 
       7				; konsolidacja (LINK 3.60): link gwiazd
					ki.obj; 
       8				.386 
       9 0000				rozkazy SEGMENT use16 
      10				ASSUME CS:rozkazy 
      11				 
      12				;======================================
					====================== 
      13				; procedura obs³ugi przerwania zegarowe
					go 
      14 0000				obsluga_klawiatury PROC 
      15				; przechowanie u¿ywanych rejestrów 
      16 0000  50			push ax 
      17 0001  53			push bx 
      18 0002  06			push es 
      19 0003  51			push cx 
      20				 
      21 0004  E4 60			in al, 60H ; kod klawisza w AL 
      22				 
      23 0006  2E: 0F B6 1E 004D R	movzx bx, cs:licznik_wykryc 
      24 000C  83 FB 07			cmp bx, 7 
      25 000F  0F 84 0037 R		je koniec 
      26				 
      27 0013  BB 0000			mov bx, 0 
      28				 
      29 0016				wykryj: 
      30 0016  2E: 8A 8F 0046 R		mov cl, cs:sekwencja[bx] 
      31 001B  3A C1			cmp al, cl 
      32 001D  0F 85 0031 R		jne nie_wykryto 
      33				 
      34 0021  2E: A0 004D R		mov al, cs:licznik_wykryc 
      35 0025  FE C0			inc al 
      36 0027  2E: A2 004D R		mov byte ptr cs:licznik_wykryc, al 
      37				 
      38 002B  2E: C6 87 0046 R 00	mov byte ptr cs:sekwencja[bx], 0 
      39				 
      40 0031				nie_wykryto: 
      41 0031  43			inc bx 
      42 0032  83 FB 07			cmp bx, 7 
      43 0035  72 DF			jb wykryj 
      44				 
      45				 
      46				 
      47 0037				koniec: 
Microsoft (R) Macro Assembler Version 5.00                  1/11/22 11:16:06
                                                             Page     1-2


      48				; odtworzenie rejestrów 
      49 0037  59			pop cx 
      50 0038  07			pop es 
      51 0039  5B			pop bx 
      52 003A  58			pop ax 
      53				; skok do oryginalnej procedury obs³ugi
					 przerwania zegarowego 
      54 003B  2E: FF 2E 0042 R		jmp dword PTR cs:wektor9 
      55				; dane programu ze wzglêdu na specyfikê
					 obs³ugi przerwañ 
      56				; umieszczone s¹ w segmencie kodu 
      57 0040  0140			licznik dw 320 ; wyœwietlanie pocz¹wszy
					 od 2. wiersza 
      58 0042  ????????			wektor9 dd ? 
      59 0046  1E 1F 20 21 24 25 26	sekwencja db 30, 31, 32, 33, 36, 37, 38
					 
      60 004D  00			licznik_wykryc db 0 ; 6 - jest sekwencj
					a 
      61 004E				obsluga_klawiatury ENDP 
      62				;======================================
					====================== 
      63				; program g³ówny - instalacja i deinsta
					lacja procedury 
      64				; obs³ugi przerwañ 
      65				; ustalenie strony nr 0 dla trybu tekst
					owego 
      66 004E				zacznij: 
      67 004E  B0 00			mov al, 0 
      68 0050  B4 05			mov ah, 5 
      69 0052  CD 10			int 10h 
      70 0054  B8 0000			mov ax, 0 
      71 0057  8E D8			mov ds,ax ; zerowanie rejestru DS 
      72				; odczytanie zawartoœci wektora nr 8 i 
					zapisanie go 
      73				; w zmiennej 'wektor8' (wektor nr 8 zaj
					muje w pamiêci 4 bajty 
      74				; pocz¹wszy od adresu fizycznego 8 * 4 
					= 32) 
      75 0059  66| A1 0024		mov eax,ds:[36] ; adres fizyczny 0*16 +
					 32 = 32 
      76 005D  2E: 66| A3 0042 R	mov cs:wektor9, eax 
      77				 
      78				; wpisanie do wektora nr 8 adresu proce
					dury 'obsluga_zegara' 
      79 0062  B8 ---- R		mov ax, SEG obsluga_klawiatury ; czêœæ 
					segmentowa adresu 
      80 0065  BB 0000 R		mov bx, OFFSET obsluga_klawiatury ; off
					set adresu 
      81 0068  FA			cli ; zablokowanie przerwañ 
      82				; zapisanie adresu procedury do wektora
					 nr 8 
      83 0069  89 1E 0024		mov ds:[36], bx ; OFFSET 
      84 006D  A3 0026			mov ds:[38], ax ; cz. segmentowa 
      85 0070  FB			sti ;odblokowanie przerwañ 
Microsoft (R) Macro Assembler Version 5.00                  1/11/22 11:16:06
                                                             Page     1-3


      86				; oczekiwanie na naciœniêcie klawisza '
					x' 
      87 0071				aktywne_oczekiwanie: 
      88 0071  B4 01			mov ah,1 
      89 0073  CD 16			int 16H 
      90				; funkcja INT 16H (AH=1) BIOSu ustawia 
					ZF=1 jeœli 
      91				; naciœniêto jakiœ klawisz 
      92 0075  74 FA			jz aktywne_oczekiwanie 
      93				; odczytanie kodu ASCII naciœniêtego kl
					awisza (INT 16H, AH=0) 
      94				; do rejestru AL 
      95 0077  B4 00			mov ah, 0 
      96 0079  CD 16			int 16H 
      97				 
      98 007B  B7 00			mov bh, 0 
      99 007D  B4 0A			mov ah, 0ah 
     100 007F  CD 10			int 10h 
     101				 
     102 0081  2E: A0 004D R		mov al, cs:licznik_wykryc 
     103 0085  3C 07			cmp al, 7 
     104 0087  0F 84 008F R		je wyjdz 
     105				 
     106 008B  3C 78			cmp al, 'x' ; porównanie z kodem litery
					 'x' 
     107 008D  75 E2			jne aktywne_oczekiwanie ; skok, gdy inn
					y znak 
     108				; deinstalacja procedury obs³ugi przerw
					ania zegarowego 
     109				; odtworzenie oryginalnej zawartoœci we
					ktora nr 8 
     110 008F				wyjdz: 
     111 008F  2E: 66| A1 0042 R	mov eax, cs:wektor9 
     112 0094  FA			cli 
     113 0095  66| A3 0024		mov ds:[36], eax ; przes³anie wartoœci 
					oryginalnej 
     114				; do wektora 8 w tablicy wektorów 
     115				; przerwañ 
     116 0099  FB			sti 
     117				; zakoñczenie programu 
     118 009A  B0 00			mov al, 0 
     119 009C  B4 4C			mov ah, 4CH 
     120 009E  CD 21			int 21H 
     121 00A0				rozkazy ENDS 
     122 0000				nasz_stos SEGMENT stack 
     123 0000  0080[			db 128 dup (?) 
     124	    ??			
     125			 ]	
     126				
     127 0080				nasz_stos ENDS 
     128				END zacznij 
Microsoft (R) Macro Assembler Version 5.00                  1/11/22 11:16:06
                                                             Symbols-1




                N a m e         	Size	Length	 Align	Combine Class

NASZ_STOS  . . . . . . . . . . .  	32 Bit	0080	PARA	STACK	
ROZKAZY  . . . . . . . . . . . .  	16 Bit	00A0	PARA	NONE	

Symbols:            

                N a m e         	Type	 Value	 Attr

AKTYWNE_OCZEKIWANIE  . . . . . .  	L NEAR	0071	ROZKAZY

KONIEC . . . . . . . . . . . . .  	L NEAR	0037	ROZKAZY

LICZNIK  . . . . . . . . . . . .  	L WORD	0040	ROZKAZY
LICZNIK_WYKRYC . . . . . . . . .  	L BYTE	004D	ROZKAZY

NIE_WYKRYTO  . . . . . . . . . .  	L NEAR	0031	ROZKAZY

OBSLUGA_KLAWIATURY . . . . . . .  	N PROC	0000	ROZKAZY	Length = 004E

SEKWENCJA  . . . . . . . . . . .  	L BYTE	0046	ROZKAZY

WEKTOR9  . . . . . . . . . . . .  	L DWORD	0042	ROZKAZY
WYJDZ  . . . . . . . . . . . . .  	L NEAR	008F	ROZKAZY
WYKRYJ . . . . . . . . . . . . .  	L NEAR	0016	ROZKAZY

ZACZNIJ  . . . . . . . . . . . .  	L NEAR	004E	ROZKAZY

@FILENAME  . . . . . . . . . . .  	TEXT  LABY		


    125 Source  Lines
    125 Total   Lines
     15 Symbols

  50408 + 466136 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
